@startuml
'https://plantuml.com/sequence-diagram

class Application{
    {static}+main()
}
Application ..> IModel
Application ..> CarFrame

Application ..> DrawPanel
Application ..> IControlPanel
Application ..> IAddRemovePanel
Application ..> LoggerPanel


class Model{
    -timer : Timer
    -boardWidth : double
    -boardLength : double
    -cars : List<Car>
    -observers : ObserverHandler
    -updateModel() : void
    -isOutOfBounds(Car) : boolean
    -bounceOffWall(Car) : void
    +getObservers() : ObserverHandler
}
Model ..|> IModel
Model --> ObserverHandler

interface IModel{
    +startEngine() : void
    +stopEngine() : void
    +gas(int) : void
    +brake(int) : void
    +raise() : void
    +lower() : void
    +setTurboOn() : void
    +setTurboOff() : void
    +getObserverHandler() : ObserverHandler
    +startTimer() : void
}

class ObserverHandler<T>{
    - subscribers : List<PaintObserver<T>>
    + addSubscriber(PaintObserver<T>) : void
    + removeSubscriber(PaintObserver<T>) : void
    + publish(List<? extends T>) : void
}
ObserverHandler *--> Observer

interface Observer<T>{
    + actOnPublish(List<? extends T>) : void
}

class CarFrame{
    panels : List<JPanel>
}


class DrawPanel{
    +DrawPanel(ObserverHandler)
}
DrawPanel ..> ObserverHandler

class ControlPanel{
    +ControlPanel(ObserverHandler)
}
ControlPanel ..> ObserverHandler
IControlPanel <|.. ControlPanel

class LoggerPanel{
    +LoggerPanel(ObserverHandler)
}
LoggerPanel ..> ObserverHandler


class AddRemovePanel{
    +Addremovepanel(ObserverHandler)
}
AddRemovePanel ..> ObserverHandler
IAddRemovePanel <|.. AddRemovePanel

interface IControlPanel{
    setStartButtonActionListener(ActionListener listener) : void
    setStopButtonActionListener(ActionListener listener) : void
    setTurboOnButtonActionListener(ActionListener listener) : void
    setTurboOffButtonActionListener(ActionListener listener) : void
    setLiftBedButtonActionListener(ActionListener listener) : void
    setLowerBedButtonActionListener(ActionListener listener) : void
}

interface IAddRemovePanel {
    addCarButtonActionListener(ActionListener listener) : void
    removeCarButtonActionListener(ActionListener listener) : void
}

class ControlPanelController{
    +ControlPanelController(IControlPanel, IModel)
}
ControlPanelController ..> IControlPanel
ControlPanelController ..> IModel

class AddRemovePanelController{
    +AddRemovePanelController(IAddRemovePanel, IModel)
}
AddRemovePanelController ..> IAddRemovePanel



package Swing {
    class JSpinner{}
    class JPanel{}
    class JButton {}
    class JLabel {}
    class JFrame {}
}

@enduml
